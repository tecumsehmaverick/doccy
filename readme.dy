{h1: Doccy}

Doccy is a lightweight markup language, but is is not as lightweight as most. Instead of trying to simplify things to make them readable as plain text, Doccy instead preferes to take the middle ground between HTML and Markdown (or similar). It is best suited to writing technical documentation.


{h2: The syntax}

Essentially Doccy provides the power of HTML with a simpler syntax that requires less typing. The basic syntax is as follows:

{pre: \{h1: Top-level heading\}}

Essentially, anything between two curley-braces is considered an element if:

{ol:
	{li: Immediately following the opening brace, a valid element name is found,}
	{li: followed by whitespace or attributes,}
	{li: and finaly a colon ({code: :}).}
}

What about attributes, element IDs and class names?

{dl:
	{dt: Attributes}
	{dd: Attributes can be set using the "at" symbol ({code: @}) followed by the attribute name and value: {code: @href http://google.com/}.}
	{dt: Class attributes}
	{dd: You can set classes on an element using a full-stop ({code: .}) followed by a valid class name: {code: .class.name}.}
	{dt: Data attributes}
	{dd: You can also set HTML5 data attributes using the percent symbol ({code: %}) followed by the attribute name and value: {code: %highlight-syntax php}.}
	{dt: ID attributes}
	{dd: Finally, you can specify the ID attribute of an element using the hash symbol ({code: #}) followed by the value of the id: {code: #main-header}.}
}

Ok, but how on earth do you write Doccy syntax inside of a Doccy document? Simple actually, just escape using the backslash symbol:

{pre: \\{code: \\\{p: For example.\\\}\\}}


{h2: Examples}

{h3: Combining classes and element IDs}

{pre: \{h1#main-header.some.class: Top-level heading\}}

You do not have to run the attributes up together, the following is also perfectly valid:

{pre: \{h1 #main-header .some .class: Top-level heading\}}

Either way, the output would look like the following:

{pre: <h1 id="main-header" class="some class">...}


{h3: Attributes and data attributes}

{pre: \{h1 @class some class %syntax php: Top-level heading\}}

This will output:

{pre: <h1 class="some class" data-syntax="php">...}